---
- name: Install Kubernetes on Ubuntu
  hosts: kubernetes
  tasks:
    - name: Update apt packages
      apt:
        update_cache: yes
      become: yes

    - name: Install apt-transport-https, ca-certificates, curl, and gpg
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg 
        state: present
      become: yes

    - name: Check if Kubernetes GPG key exists
      stat:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: gpg_key_exists
      become: yes

    - name: Download Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      become: yes
      when: not gpg_key_exists.stat.exists
      
    - name: Add Kubernetes repository to Apt sources
      lineinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        line: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        create: yes
      become: yes

    - name: Update apt packages again
      apt:
        update_cache: yes
      become: yes

    - name: Install kubelet, kubeadm, kubectl
      apt:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        state: present
      become: yes

    - name: Set SystemdCgroup property in Containerd config
      ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml
      become: yes

    - name: Modify SystemdCgroup property in Containerd config
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: '^(\s*SystemdCgroup\s*=\s*)false$'
        replace: '\1true'
      become: yes
      register: lineinfile_result

    - debug:
        var: lineinfile_result

    - name: Restart Containerd service
      service:
        name: containerd
        state: restarted
      become: yes

    - name: Check if Kubernetes GPG key exists
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubeconf
      become: yes

    - name: Initialize Kubernetes cluster
      command: kubeadm init --apiserver-advertise-address=10.0.0.5
      register: kubeadm_output
      ignore_errors: yes
      when: not kubeconf.stat.exists
      become: yes

    - name: Setup Kubeconfig for the current user
      shell: |
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
      args:
        creates: $HOME/.kube/config

    # Install an overlay network add-on so that containers in different nodes can talk to each other
    - name: Install a pod network add-on
      command: kubectl apply -f https://reweave.azurewebsites.net/k8s/v1.29/net.yaml
      when: kubeadm_output is succeeded

    # Normally the control-plane node cannot run containers because of a taint, remove it
    - name: Allow the control-plane node to run containers
      command: kubectl taint node idop-vm-02 node-role.kubernetes.io/control-plane:NoSchedule-
      when: kubeadm_output is succeeded
